# Signal CLI REST API Dependency Installation and Build
- name: Download and setup Signal CLI
  shell: |
    cd /tmp
    wget https://github.com/AsamK/signal-cli/releases/download/v0.13.5/signal-cli-0.13.5.tar.gz
    tar -C /opt -xzf signal-cli-0.13.5.tar.gz
    ln -sf /opt/signal-cli-0.13.5/bin/signal-cli /usr/local/bin/signal-cli
  args:
    creates: /usr/local/bin/signal-cli

- name: Create Signal API data directory
  file:
    path: "/opt/signal-api/data"
    state: directory
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: '0755'

- name: Clean and clone Signal CLI REST API
  shell: |
    rm -rf {{ app_dir | basename }}
    git clone https://github.com/bbernhard/signal-cli-rest-api.git {{ app_dir | basename }}
  args:
    chdir: /opt
  become_user: "{{ app_user }}"

- name: Initialize Go modules
  shell: |
    export PATH=$PATH:/usr/local/go/bin
    go mod tidy
  args:
    chdir: "{{ app_dir }}/src"
  become_user: "{{ app_user }}"
  environment:
    GOOS: linux
    GOARCH: amd64

- name: Download Go dependencies
  shell: |
    export PATH=$PATH:/usr/local/go/bin
    go mod download
  args:
    chdir: "{{ app_dir }}/src"
  become_user: "{{ app_user }}"
  environment:
    GOOS: linux
    GOARCH: amd64

- name: Build Signal CLI REST API
  shell: |
    export PATH=$PATH:/usr/local/go/bin
    go build -o ../{{ app_service_name }} .
  args:
    chdir: "{{ app_dir }}/src"
  become_user: "{{ app_user }}"
  environment:
    GOOS: linux
    GOARCH: amd64
    CGO_ENABLED: "1"
  register: build_result

- name: Check build results
  fail:
    msg: "Build failed for {{ service_name }}: {{ build_result.stderr }}"
  when: build_result.failed | default(false)

- name: Verify binary was created
  stat:
    path: "{{ app_dir }}/{{ app_service_name }}"
  register: binary_check

- name: Ensure binary is executable
  file:
    path: "{{ app_dir }}/{{ app_service_name }}"
    mode: '0755'
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
  when: binary_check.stat.exists

- name: Display build success
  debug:
    msg: "Signal CLI REST API built successfully: {{ app_dir }}/{{ app_service_name }}"
  when: binary_check.stat.exists
