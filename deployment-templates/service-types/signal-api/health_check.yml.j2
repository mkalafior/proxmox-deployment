# Signal CLI REST API Health Check Tasks

- name: "Wait for Signal API service to start"
  wait_for:
    port: "{{ app_port | default('8080') }}"
    host: "{{ ansible_default_ipv4.address }}"
    delay: 5
    timeout: 60
  register: signal_api_port_check

- name: "Check Signal API health endpoint"
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ app_port | default('8080') }}/v1/health"
    method: GET
    timeout: 10
    status_code: [200, 404]  # 404 is acceptable if health endpoint not implemented
  register: signal_api_health_check
  retries: 3
  delay: 5
  ignore_errors: true

- name: "Check Signal API about endpoint (alternative health check)"
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ app_port | default('8080') }}/v1/about"
    method: GET
    timeout: 10
    status_code: [200, 404]
  register: signal_api_about_check
  retries: 3
  delay: 5
  ignore_errors: true
  when: signal_api_health_check.failed | default(false)

- name: "Check if Signal API is responding (basic connectivity)"
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ app_port | default('8080') }}/"
    method: GET
    timeout: 10
    status_code: [200, 404, 405]  # Various acceptable responses
  register: signal_api_basic_check
  retries: 3
  delay: 5
  ignore_errors: true
  when: 
    - signal_api_health_check.failed | default(false)
    - signal_api_about_check.failed | default(false)

- name: "Verify signal-cli is accessible"
  shell: /usr/local/bin/signal-cli --version
  register: signal_cli_version_check
  changed_when: false
  ignore_errors: true

- name: "Check systemd service status"
  systemd:
    name: "{{ app_service_name }}"
    state: started
  register: signal_api_service_status
  ignore_errors: true

- name: "Display health check results"
  debug:
    msg: |
      Signal API Health Check Results:
      ================================
      Port {{ app_port | default('8080') }} accessible: {{ 'Yes' if not signal_api_port_check.failed else 'No' }}
      Health endpoint (/v1/health): {{ 'OK' if signal_api_health_check.status == 200 else 'Not available' }}
      About endpoint (/v1/about): {{ 'OK' if signal_api_about_check.status == 200 else 'Not available' }}
      Basic connectivity: {{ 'OK' if not signal_api_basic_check.failed else 'Failed' }}
      Signal CLI version: {{ signal_cli_version_check.stdout if not signal_cli_version_check.failed else 'Not accessible' }}
      Systemd service: {{ 'Running' if not signal_api_service_status.failed else 'Not running' }}

- name: "Health check summary"
  set_fact:
    health_check_passed: >-
      {{
        not signal_api_port_check.failed and
        (
          signal_api_health_check.status == 200 or
          signal_api_about_check.status == 200 or
          not signal_api_basic_check.failed
        ) and
        not signal_cli_version_check.failed and
        not signal_api_service_status.failed
      }}

- name: "Report health check status"
  debug:
    msg: "Signal API health check: {{ 'PASSED' if health_check_passed else 'FAILED' }}"

- name: "Fail deployment if health check failed"
  fail:
    msg: |
      Signal API health check failed. Please check:
      1. Service is running: systemctl status {{ app_service_name }}
      2. Logs: journalctl -u {{ app_service_name }} -f
      3. Port accessibility: netstat -tlnp | grep {{ app_port | default('8080') }}
      4. Signal CLI installation: /usr/local/bin/signal-cli --version
  when: 
    - not health_check_passed
    - fail_on_health_check | default(true)
