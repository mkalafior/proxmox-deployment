# Signal CLI REST API Health Check
- name: Wait for service to be ready
  pause:
    seconds: 2

- name: Check if service is active
  systemd:
    name: "{{ app_service_name }}"
  register: service_status

- name: Verify service is running
  assert:
    that:
      - service_status.status.ActiveState == "active"
    fail_msg: "Service {{ app_service_name }} is not active. Status: {{ service_status.status.ActiveState }}"

- name: Check application port is listening
  wait_for:
    host: "0.0.0.0"
    port: "{{ app_port }}"
    timeout: "{{ health_check_timeout | default(30) }}"
  register: port_check

- name: Test health endpoint
  uri:
    url: "http://localhost:{{ app_port }}{{ health_check_path | default('/health') }}"
    method: GET
    timeout: 10
    status_code: [200, 204]  # Health endpoint returns 204 No Content
  register: health_response
  ignore_errors: true

- name: Display health check results
  debug:
    msg: |
      Health Check Results:
      Service Status: {{ service_status.status.ActiveState }}
      Port {{ app_port }}: {{ 'Open' if not port_check.failed else 'Closed' }}
      Health Endpoint: {{ 'OK' if health_response.status == 200 else 'Not available' }}

- name: Health check passed
  debug:
    msg: "âœ… Signal CLI REST API health check passed"
  when: 
    - service_status.status.ActiveState == "active"
    - not port_check.failed
