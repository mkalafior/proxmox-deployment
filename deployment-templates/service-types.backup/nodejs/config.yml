# Node.js/Bun.js Service Type Configuration
service_type: nodejs
runtime_name: "Node.js/Bun.js"

# Runtime installation tasks
runtime_install:
  - name: "Install prerequisites for Node.js LTS"
    apt:
      name:
        - ca-certificates
        - curl
        - gnupg
      state: present
      update_cache: yes
    when: nodejs_runtime == "node"
  
  - name: "Add NodeSource GPG key"
    shell: |
      curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
    args:
      creates: /etc/apt/keyrings/nodesource.gpg
    when: nodejs_runtime == "node"
  
  - name: "Add NodeSource repository for Node.js LTS"
    shell: |
      echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
    args:
      creates: /etc/apt/sources.list.d/nodesource.list
    when: nodejs_runtime == "node"
  
  - name: "Update apt cache after adding NodeSource repository"
    apt:
      update_cache: yes
    when: nodejs_runtime == "node"
  
  - name: "Install Node.js LTS runtime"
    apt:
      name: nodejs
      state: present
    when: nodejs_runtime == "node"
  
  - name: "Install Bun runtime system-wide"
    shell: |
      curl -fsSL https://bun.sh/install | bash
      cp /root/.bun/bin/bun /usr/local/bin/bun
      chmod 755 /usr/local/bin/bun
      chown root:root /usr/local/bin/bun
    args:
      creates: /usr/local/bin/bun
    when: nodejs_runtime == "bun"

# Dependency installation
dependency_install:
  - name: "Install dependencies with npm"
    shell: npm install
    args:
      chdir: "{{ app_dir }}"
    become_user: "{{ app_user }}"
    when: nodejs_runtime == "node"
  
  - name: "Install dependencies with Bun"
    shell: /usr/local/bin/bun install
    args:
      chdir: "{{ app_dir }}"
    become_user: "{{ app_user }}"
    when: nodejs_runtime == "bun"

# File exclusions for tar archive
file_exclusions:
  - "node_modules"
  - ".git"
  - "deployment"
  - "deployments"
  - "*.log"
  - ".env"
  - ".npm"
  - "package-lock.json"

# Default environment variables
default_env:
  NODE_ENV: production
  HOST: "0.0.0.0"

# Health check endpoint
health_check_path: "/health"

# Default systemd service configuration
systemd_service:
  Type: simple
  ExecStart: "{{ '/usr/local/bin/bun' if nodejs_runtime == 'bun' else 'node' }} {{ app_main_file | default('index.js') }}"
  Restart: always
  RestartSec: 10
